stages:
  - buildweb
  - buildlb
  - scanweb
  - deploy

before_script:
  - apk --update add openssh-client git
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - docker info
  - git config --global user.email "dangahan@gmail.com"
  - git config --global user.name "DanGahan"

buildweb:
  stage: buildweb
  image: docker:1.11
  services:
    - docker:dind
  script:
  - export WEBVERSION=$(git rev-parse HEAD)
  - git tag RELEASE_$WEBVERSION master
  - git push origin RELEASE_$WEBVERSION
  - echo "export WEBVERSION=$(echo "$WEBVERSION")" >> variables
  - ls
  - sed -i  "s|DD-MM-YYYY|$(date '+%d/%m/%Y')|g" footer.html
  - sed -i  "s|XXX-XXX-XXX|$WEBVERSION|g" footer.html
  - docker build -t dangahan/gahandotmedotukweb:$WEBVERSION .
  - docker login -u "$DOCKERHUBUSER" -p "$DOCKERHUBPASSWORD"
  - docker push dangahan/gahandotmedotukweb:$WEBVERSION
  artifacts:
    paths: 
    - variables 
  only:
    variables:
    - $CI_PIPELINE_SOURCE == "web"
    - $CI_COMMIT_REF_NAME == "master"


buildloadbalancer:
  stage: buildlb
  image: docker:1.11
  services:
    - docker:dind
  script:  
  - git clone https://"$GITUSER":"$GITPASSWORD"@github.com/DanGahan/GahanDotMeDotUkLoadbalancer.git
  - cd GahanDotMeDotUkLoadbalancer
  - export LBVERSION=$(git rev-parse HEAD)
  - echo "export LBVERSION=$(echo "$LBVERSION")" >> ../variables
  - docker build -t dangahan/gahandotmedotukloadbalancer:$LBVERSION .
  - docker login -u "$DOCKERHUBUSER" -p "$DOCKERHUBPASSWORD" 
  - docker push dangahan/gahandotmedotukloadbalancer:$LBVERSION
  artifacts:
    paths: 
     - variables 
  only:
    variables:
    - $CI_PIPELINE_SOURCE == "web"
    - $CI_COMMIT_REF_NAME == "master"

scanweb:
  stage: scanweb
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    ## Define two new variables based on GitLab's CI/CD predefined variables
    ## https://docs.gitlab.com/ee/ci/variables/README.html#predefined-environment-variables
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
    CLAIR_LOCAL_SCAN_VERSION: v2.0.8_fe9b059d930314b54c78f75afe265955faf4fdc1
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - source variables 
    - docker login -u "$DOCKERHUBUSER" -p "$DOCKERHUBPASSWORD"
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:${CLAIR_LOCAL_SCAN_VERSION}
    - apk add -U wget ca-certificates
    - docker pull dangahan/gahandotmedotukweb:$WEBVERSION
    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
    - retries=0
    - echo "Waiting for clair daemon to start"
    - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
    - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml dangahan/gahandotmedotukweb:$WEBVERSION || true
  artifacts:
    paths: 
     - variables 
     - gl-container-scanning-report.json

deploy: 
  stage: deploy
  image: docker:1.11
  services:
    - docker:dind
  script:  
  - source variables
  - ssh -o StrictHostKeyChecking=no dan@178.79.155.32 -p 2222 "cd ~/GahanDotMeDotUkCompose && /bin/sudo /bin/docker-compose down"
  - ssh -o StrictHostKeyChecking=no dan@178.79.155.32 -p 2222 "rm -rf GahanDotMeDotUkCompose"
  - ssh -o StrictHostKeyChecking=no dan@178.79.155.32 -p 2222 "git clone git@github.com:DanGahan/GahanDotMeDotUkCompose.git"
  - ssh -o StrictHostKeyChecking=no dan@178.79.155.32 -p 2222 "cd ~/GahanDotMeDotUkCompose && echo WEBTAG=$WEBVERSION >> .env && echo LBTAG=$LBVERSION >> .env"
  - ssh -o StrictHostKeyChecking=no dan@178.79.155.32 -p 2222 "cd ~/GahanDotMeDotUkCompose && /bin/sudo /bin/docker-compose up -d"   
  artifacts:
    paths: 
     - variables 
  only:
    variables:
    - $CI_PIPELINE_SOURCE == "web"
    - $CI_COMMIT_REF_NAME == "master"